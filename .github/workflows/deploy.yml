# TODO:ECRビルドをさ分ある時だけ実行にしたい
name: Deploy to Amazon ECS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ap-northeast-1

  ECR_REPOSITORY: example
  BACKEND_TAG: backend
  FRONTEND_TAG: frontend

  ECS_CLUSTER: example
  ECS_SERVICE_BACKEND: backend
  ECS_SERVICE_FRONTEND: frontend

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: AUTO_DEPLOY_TO_ECS

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # 後で戻す
      # - name: Build and push image for ECR backend
      #   uses: docker/build-push-action@v4
      #   with:
      #     context: ./backend
      #     push: true
      #     tags: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.BACKEND_TAG }}-latest

      - name: Build and push image for ECR frontend
        uses: docker/build-push-action@v2
        with:
          context: ./frontend
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.FRONTEND_TAG }}-latest

      # - name: Force a new deployment for Backend
      #   run: |
      #     aws ecs update-service --cluster ${{ env.ECS_CLUSTER }} --service ${{ env.ECS_SERVICE_BACKEND }} --force-new-deployment

      - name: Force a new deployment for Frontend
        run: |
          aws ecs update-service --cluster ${{ env.ECS_CLUSTER }} --service ${{ env.ECS_SERVICE_FRONTEND }} --force-new-deployment
